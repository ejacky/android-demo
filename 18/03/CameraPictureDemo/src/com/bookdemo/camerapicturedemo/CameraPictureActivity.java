package com.bookdemo.camerapicturedemo;

import java.io.File;
import java.io.FileOutputStream;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.FrameLayout;
import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.hardware.Camera;
import android.hardware.Camera.AutoFocusCallback;
import android.hardware.Camera.PictureCallback;

public class CameraPictureActivity extends Activity {
	protected static final String TAG = "main";
	private Camera mCamera;
	private CameraPreview mPreview;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		// 获得Camera对象
		mCamera = getCameraInstance();

		// 创建预览类，并与Camera关联，最后添加到界面布局中
		mPreview = new CameraPreview(this, mCamera);
		FrameLayout preview = (FrameLayout) findViewById(R.id.camera_preview);
		preview.addView(mPreview);


		Button captureButton = (Button) findViewById(R.id.button_capture);
		captureButton.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				// 在捕获图片前进行自动对焦
				mCamera.autoFocus(new AutoFocusCallback() {
					
					@Override
					public void onAutoFocus(boolean success, Camera camera) {
						// 聚焦完成，从Camera捕获图片
						mCamera.takePicture(null, null, mPicture);
					}
				});				
			}
		});
	}

	/** 检测设备是否存在Camera硬件 */
	private boolean checkCameraHardware(Context context) {
		if (context.getPackageManager().hasSystemFeature(
				PackageManager.FEATURE_CAMERA)) {
			// 存在
			return true;
		} else {
			// 不存在
			return false;
		}
	}

	/** 打开一个Camera */
	public static Camera getCameraInstance() {
		Camera c = null;
		try {
			c = Camera.open(); 
		} catch (Exception e) {
			Log.d(TAG, "打开Camera失败失败");
		}
		return c; 
	}

	private PictureCallback mPicture = new PictureCallback() {

		@Override
		public void onPictureTaken(byte[] data, Camera camera) {
			// 获取Jpeg图片，并保存在sd卡上
			File pictureFile = new File("/sdcard/" + System.currentTimeMillis()
					+ ".jpg");
			try {
				FileOutputStream fos = new FileOutputStream(pictureFile);
				fos.write(data);
				fos.close();
			} catch (Exception e) {
				Log.d(TAG, "保存图片失败");
			}
		}
	};

	@Override
	protected void onDestroy() {
		// 回收Camera资源
		if(mCamera!=null){
			mCamera.stopPreview();
			mCamera.release();
			mCamera=null;
		}
		super.onDestroy();
	}	
}
